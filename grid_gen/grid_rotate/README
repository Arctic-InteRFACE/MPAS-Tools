grid_rotate: Rotates a spherical NetCDF mesh according to user-specified latitude, longitude, and bird's eye rotations


I. Overview

This standalone application rotates a spherical NetCDF mesh and saves the output to a new NetCDF file.  There are three types of rotations that can be performed: a latitude shift, a longitude shift, and a rotation around an arbitrary axis.

This is a standalone application written in Fortran90.


II. Building the code

This standalone consists of the files: grid_rotate.f90, namelist.input, and Makefile

Building requires NetCDF and a Fortran compiler.

Update the Makefile to use your preferred compiler and make certain the environment variable NETCDF points to your installation of NetCDF; make


III.  Running the code

Update the namelist.input file to specify the desired location. The variables are:
    config_original_latitude_degrees
    config_original_longitude_degrees
    config_new_latitude_degrees
    config_new_latitude_degrees
    config_birdseye_rotation_counter_clockwise_degrees

    config_original_latitude_degrees and config_original_longitude_degrees specify a reference point on the sphere (typically the center of a fine resolution region of the original mesh).

    config_new_latitude_degrees and config_new_latitude_degrees determine the latitude and longitude shift by specifying where the reference point is rotated to.

    config_birdseye_rotation_counter_clockwise_degrees will adjust the orientation of the mesh with respect to the poles by rotating the mesh counter-clockwise around the reference point as viewed from a bird's eye perspective.


Execute the application and specify as command-line arguments the NetCDF file that is to be rotated and the name to be given the generated output file.

    %> grid_rotate input_filename.nc output_filename.nc


IV.   Additional Tools
    
The NCL file mesh.ncl is included with this application and can be used to plot grids before and after rotation.  To plot a file, modify the input filename on the line: 

    f = addfile("grid.nc","r")

and run the script: 

    %> ncl mesh.ncl

 
